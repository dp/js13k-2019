// Generated by CoffeeScript 1.12.5
(function() {
  var Sprite;

  Sprite = (function() {
    function Sprite(spriteData, w, h, colours) {
      this.spriteData = spriteData;
      this.w = w;
      this.h = h;
      this.colours = colours;
      this.canvas = document.createElement('canvas');
      this.imageW = Screen.pixelW * this.w * 2;
      this.imageH = Screen.pixelH * this.h;
      this.canvas.width = this.imageW;
      this.canvas.height = this.imageH * 2;
      this.ctx = this.canvas.getContext("2d");
      this.createCanvas();
    }

    Sprite.prototype.createCanvas = function() {
      var bits, byte, byteStr, colour, i, j, k, l, len, len1, line, offset, ref, ref1, x, y;
      x = 0;
      y = 0;
      x = x * Screen.pixelW;
      y = y * Screen.pixelH;
      ref = this.spriteData.trim().split("\n");
      for (j = 0, len = ref.length; j < len; j++) {
        line = ref[j];
        offset = 0;
        ref1 = line.match(/(..?)/g);
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          byteStr = ref1[k];
          byte = parseInt(byteStr, 16);
          for (i = l = 0; l <= 3; i = ++l) {
            bits = byte & 0xc0;
            colour = bits === 0x0 ? null : bits === 0x40 ? this.colours[0] : bits === 0x80 ? this.colours[1] : bits === 0xc0 ? this.colours[2] : void 0;
            if (colour) {
              this.ctx.fillStyle = colour;
              this.ctx.fillRect(x + offset * Screen.pixelW, y, Screen.pixelW * 2, Screen.pixelH);
            }
            offset += 2;
            byte = byte << 2;
          }
        }
        y += Screen.pixelH;
      }
      true;
      this.ctx.save();
      this.ctx.scale(-1, 1);
      this.ctx.drawImage(this.canvas, 0, this.imageH, this.imageW * -1, this.imageH * 2);
      return this.ctx.restore();
    };

    Sprite.prototype.draw = function(x, y, reversed) {
      var sy;
      sy = reversed ? this.imageH : 0;
      return Screen.ctx.drawImage(this.canvas, 0, sy, this.imageW, this.imageH, x, y, this.imageW, this.imageH);
    };

    Sprite.prototype.getImageData = function(reversed) {
      var sy;
      sy = reversed ? this.imageH : 0;
      return this.ctx.getImageData(0, sy, this.imageW, this.imageH).data;
    };

    return Sprite;

  })();

  window.Sprite = Sprite;

}).call(this);

//# sourceMappingURL=sprite.js.map
