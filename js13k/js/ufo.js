// Generated by CoffeeScript 1.12.5
(function() {
  var Guppie, UFO,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  UFO = (function(superClass) {
    extend(UFO, superClass);

    function UFO(x, base) {
      this.x = x;
      this.base = base;
      this.sprite = sprites.ufo;
      this.y = this.base;
      this.vSpeed = 200 * Screen.pixelH;
      this.hSpeed = 30 * Screen.pixelW;
      UFO.__super__.constructor.apply(this, arguments);
      this.points = 50;
      this.hitbox = buildHitbox(this.offsetX, this.offsetY, 1, 2, 14, 6);
    }

    UFO.prototype.update = function(delta) {
      this.x += this.direction * this.hSpeed * delta;
      this.y = this.base + Math.sin(this.x / 100) * 30;
      if (!this.offScreen && Math.random() > 0.99) {
        return this.fire();
      }
    };

    UFO.prototype.fire = function() {
      var direction, shotOffset, shotSpeed;
      shotOffset = Screen.pixelW * 4;
      shotSpeed = 20 * Screen.pixelD;
      direction = Math.random() * Math.PI * 2;
      return Game.world.getNextEnemyShot().fire(this.x + shotOffset, this.y + 2 * Screen.pixelH, shotSpeed, direction);
    };

    return UFO;

  })(Enemy);

  Guppie = (function(superClass) {
    extend(Guppie, superClass);

    function Guppie(x) {
      this.x = x;
      this.sprite = sprites.seeker;
      this.y = 100;
      this.vSpeed = 15 * Screen.pixelH;
      this.hSpeed = 40 * Screen.pixelW;
      Guppie.__super__.constructor.apply(this, arguments);
      this.points = 150;
      this.hitbox = buildHitbox(this.offsetX, this.offsetY, 2, 2, 12, 8);
    }

    Guppie.prototype.setRandomTargetDelta = function() {
      this.targetDeltaX = (randInt(200) - 100) * Screen.pixelW;
      return this.targetY = (randInt(130) + 30) * Screen.pixelH;
    };

    Guppie.prototype.update = function(delta) {
      var deltaX, deltaY, targetX;
      targetX = Game.ship.x + this.targetDeltaX;
      deltaX = targetX - this.x;
      deltaY = this.targetY - this.y;
      if (Math.abs(deltaX) > 10) {
        if (deltaX > 0) {
          this.direction = 1;
          this.facingLeft = false;
        } else {
          this.direction = -1;
          this.facingLeft = true;
        }
        this.x += this.direction * this.hSpeed * delta;
      } else {
        this.setRandomTargetDelta();
      }
      if (Math.abs(deltaY) > 10) {
        if (deltaY > 0) {
          this.direction = 1;
        } else {
          this.direction = -1;
        }
        this.y += this.direction * this.vSpeed * delta;
      }
      if (!this.offScreen && Math.random() > 0.99) {
        return this.fire();
      }
    };

    Guppie.prototype.fire = function() {
      var direction, shotOffset, shotSpeed;
      shotOffset = Screen.pixelW * 4;
      shotSpeed = 20 * Screen.pixelD;
      direction = Math.random() * Math.PI * 2;
      return Game.world.getNextEnemyShot().fire(this.x + shotOffset, this.y + 2 * Screen.pixelH, shotSpeed, direction);
    };

    return Guppie;

  })(Enemy);

  window.UFO = UFO;

  window.Guppie = Guppie;

}).call(this);

//# sourceMappingURL=ufo.js.map
